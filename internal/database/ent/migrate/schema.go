// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AgentsColumns holds the columns for the "agents" table.
	AgentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "comment", Type: field.TypeString, Nullable: true},
		{Name: "os", Type: field.TypeString},
		{Name: "arch", Type: field.TypeString},
		{Name: "servers", Type: field.TypeJSON},
		{Name: "shared", Type: field.TypeBool, Default: false},
		{Name: "pie", Type: field.TypeBool, Default: false},
		{Name: "garble", Type: field.TypeBool, Default: false},
		{Name: "subsystems", Type: field.TypeJSON},
		{Name: "xxhash", Type: field.TypeString},
		{Name: "path", Type: field.TypeString},
		{Name: "url", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "callbacks", Type: field.TypeInt, Default: 0},
		{Name: "downloads", Type: field.TypeInt, Default: 0},
		{Name: "public_key", Type: field.TypeBytes},
	}
	// AgentsTable holds the schema information for the "agents" table.
	AgentsTable = &schema.Table{
		Name:       "agents",
		Columns:    AgentsColumns,
		PrimaryKey: []*schema.Column{AgentsColumns[0]},
	}
	// ListenersColumns holds the columns for the "listeners" table.
	ListenersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "private_key", Type: field.TypeBytes},
	}
	// ListenersTable holds the schema information for the "listeners" table.
	ListenersTable = &schema.Table{
		Name:       "listeners",
		Columns:    ListenersColumns,
		PrimaryKey: []*schema.Column{ListenersColumns[0]},
	}
	// SessionsColumns holds the columns for the "sessions" table.
	SessionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "agent_id", Type: field.TypeString},
		{Name: "username", Type: field.TypeString},
		{Name: "hostname", Type: field.TypeString},
		{Name: "domain", Type: field.TypeString, Default: ""},
		{Name: "is_priv", Type: field.TypeBool, Default: false},
		{Name: "ips", Type: field.TypeJSON},
		{Name: "os_meta", Type: field.TypeString, Default: ""},
		{Name: "proc_name", Type: field.TypeString, Default: ""},
		{Name: "extra", Type: field.TypeString, Default: ""},
	}
	// SessionsTable holds the schema information for the "sessions" table.
	SessionsTable = &schema.Table{
		Name:       "sessions",
		Columns:    SessionsColumns,
		PrimaryKey: []*schema.Column{SessionsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AgentsTable,
		ListenersTable,
		SessionsTable,
	}
)

func init() {
}
