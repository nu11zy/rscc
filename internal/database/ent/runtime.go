// Code generated by ent, DO NOT EDIT.

package ent

import (
	"rscc/internal/database/ent/agent"
	"rscc/internal/database/ent/listener"
	"rscc/internal/database/ent/schema"
	"rscc/internal/database/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	agentFields := schema.Agent{}.Fields()
	_ = agentFields
	// agentDescName is the schema descriptor for name field.
	agentDescName := agentFields[1].Descriptor()
	// agent.NameValidator is a validator for the "name" field. It is called by the builders before save.
	agent.NameValidator = agentDescName.Validators[0].(func(string) error)
	// agentDescOs is the schema descriptor for os field.
	agentDescOs := agentFields[2].Descriptor()
	// agent.OsValidator is a validator for the "os" field. It is called by the builders before save.
	agent.OsValidator = agentDescOs.Validators[0].(func(string) error)
	// agentDescArch is the schema descriptor for arch field.
	agentDescArch := agentFields[3].Descriptor()
	// agent.ArchValidator is a validator for the "arch" field. It is called by the builders before save.
	agent.ArchValidator = agentDescArch.Validators[0].(func(string) error)
	// agentDescServer is the schema descriptor for server field.
	agentDescServer := agentFields[4].Descriptor()
	// agent.ServerValidator is a validator for the "server" field. It is called by the builders before save.
	agent.ServerValidator = agentDescServer.Validators[0].(func(string) error)
	// agentDescShared is the schema descriptor for shared field.
	agentDescShared := agentFields[5].Descriptor()
	// agent.DefaultShared holds the default value on creation for the shared field.
	agent.DefaultShared = agentDescShared.Default.(bool)
	// agentDescPie is the schema descriptor for pie field.
	agentDescPie := agentFields[6].Descriptor()
	// agent.DefaultPie holds the default value on creation for the pie field.
	agent.DefaultPie = agentDescPie.Default.(bool)
	// agentDescGarble is the schema descriptor for garble field.
	agentDescGarble := agentFields[7].Descriptor()
	// agent.DefaultGarble holds the default value on creation for the garble field.
	agent.DefaultGarble = agentDescGarble.Default.(bool)
	// agentDescSubsystems is the schema descriptor for subsystems field.
	agentDescSubsystems := agentFields[8].Descriptor()
	// agent.DefaultSubsystems holds the default value on creation for the subsystems field.
	agent.DefaultSubsystems = agentDescSubsystems.Default.([]string)
	// agentDescPublicKey is the schema descriptor for public_key field.
	agentDescPublicKey := agentFields[9].Descriptor()
	// agent.PublicKeyValidator is a validator for the "public_key" field. It is called by the builders before save.
	agent.PublicKeyValidator = agentDescPublicKey.Validators[0].(func([]byte) error)
	// agentDescXxhash is the schema descriptor for xxhash field.
	agentDescXxhash := agentFields[10].Descriptor()
	// agent.XxhashValidator is a validator for the "xxhash" field. It is called by the builders before save.
	agent.XxhashValidator = agentDescXxhash.Validators[0].(func(string) error)
	// agentDescID is the schema descriptor for id field.
	agentDescID := agentFields[0].Descriptor()
	// agent.DefaultID holds the default value on creation for the id field.
	agent.DefaultID = agentDescID.Default.(func() string)
	listenerFields := schema.Listener{}.Fields()
	_ = listenerFields
	// listenerDescName is the schema descriptor for name field.
	listenerDescName := listenerFields[1].Descriptor()
	// listener.NameValidator is a validator for the "name" field. It is called by the builders before save.
	listener.NameValidator = listenerDescName.Validators[0].(func(string) error)
	// listenerDescPrivateKey is the schema descriptor for private_key field.
	listenerDescPrivateKey := listenerFields[2].Descriptor()
	// listener.PrivateKeyValidator is a validator for the "private_key" field. It is called by the builders before save.
	listener.PrivateKeyValidator = listenerDescPrivateKey.Validators[0].(func([]byte) error)
	// listenerDescID is the schema descriptor for id field.
	listenerDescID := listenerFields[0].Descriptor()
	// listener.DefaultID holds the default value on creation for the id field.
	listener.DefaultID = listenerDescID.Default.(func() string)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[1].Descriptor()
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
	// userDescPublicKey is the schema descriptor for public_key field.
	userDescPublicKey := userFields[3].Descriptor()
	// user.PublicKeyValidator is a validator for the "public_key" field. It is called by the builders before save.
	user.PublicKeyValidator = userDescPublicKey.Validators[0].(func(string) error)
	// userDescIsAdmin is the schema descriptor for is_admin field.
	userDescIsAdmin := userFields[4].Descriptor()
	// user.DefaultIsAdmin holds the default value on creation for the is_admin field.
	user.DefaultIsAdmin = userDescIsAdmin.Default.(bool)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() string)
}
